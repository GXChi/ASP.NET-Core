@model List<CloudNote.Service.UserApp.Dtos.UserDto>
<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/layui/dist/layui.js"></script>
<script type="text/html" id="toolbar">
    <div class="layui-btn-container">
        <button class="layui-btn layui-btn-sm" lay-event="add">新增</button>
        <button class="layui-btn layui-btn-sm" lay-event="getCheckData">获取选中行数据</button>
        <button class="layui-btn layui-btn-sm" lay-event="getCheckLength">获取选中数目</button>
        <button class="layui-btn layui-btn-sm" lay-event="getData">获取当前页所有数据</button>
        <button class="layui-btn layui-btn-sm" lay-event="isAll">验证是否全选</button>
        <button class="layui-btn layui-btn-sm" lay-event="reload">重载（保留初始参数）</button>
        <button class="layui-btn layui-btn-sm" lay-event="reload2">重载（不保留初始参数）</button>
        <button class="layui-btn layui-btn-sm" lay-event="setRole">分配角色</button>
        <button class="layui-btn layui-btn-sm" id="dropdown">
            更多菜单
            <i class="layui-icon layui-icon-down layui-font-12"></i>
        </button>
    </div>
</script>

<div class="layui-card">
    <div class="layui-card-body">
        <table id="test" lay-filter="test"></table>
    </div>
</div>

<script type="text/html" id="barOperation">
    <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
    <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
    <a class="layui-btn layui-btn-xs" lay-event="setRole">授权</a>
</script>

<script>
    var table;
    layui.use(['table', 'dropdown'], function () {
        layer.closeAll();
        table = layui.table
            , $ = layui.$
            , laytpl = layui.laytpl
            , dropdown = layui.dropdown;

        //全局设定某参数
        //table.set({
        //    where: {
        //        token: '默认 token 参数'
        //    }
        //    //,defaultToolbar: ['filter']
        //    , limit: 30
        //    //,url: 'list'
        //    ,height: 900
        //});

        //渲染
        window.ins = table.render({
            elem: '#test'
            , limit: 10
            //, height: 860
            //,width: 600
            , title: '用户数据表'
            , url: 'User/Index'
            , method: 'Post'
            , request: {
                pageName: 'curr' //页码的参数名称，默认：page
                , limitName: 'nums' //每页数据量的参数名，默认：limit
            }
            , parseData: function (res) { //把数据转换为指定格式code,msg,count,data //res 即为原始返回的数据
                return {
                    "code": res.code, //解析接口状态
                    "msg": res.msg, //解析提示文本
                    "count": res.count, //解析数据长度
                    "data": res.data //解析数据列表
                };
            }
            //,size: 'lg'
            , page: {

            }
            //,autoSort: false //是否自动排序。如果否，则由服务端排序
            //,loading: false
            , totalRow: true
            , limit: 20
            , toolbar: '#toolbar'
            , defaultToolbar: ['filter', 'exports', 'print', {
                title: '帮助'
                , layEvent: 'LAYTABLE_TIPS'
                , icon: 'layui-icon-tips'
            }]
            , cols: [[
                { type: 'checkbox', fixed: 'left' }
                , { field: 'xuhao', title: '序号', type: 'numbers'}
                , { field: 'userName', title: '用户名', width: 120, edit: 'text', templet: '#usernameTpl' }
                , { field: 'nickName', title: '昵称', width: 120, edit: 'text', templet: '#usernameTpl' }
                , { field: 'sex', title: '性别', width: 80, edit: 'text', sort: true }
                , { field: 'phone', title: '手机', width: 120, templet: '#cityTpl1' }

                , {
                    field: 'email', title: '邮箱', hide: 0, width: 150, edit: 'text', templet: function (d) {
                        console.log(d);
                        return '<em>' + d.email + '</em>'
                    }
                }
                , { field: 'address', title: '地址', width: 120, templet: '#cityTpl1' }
                , { field: 'personalSignature', title: '签名' }
                , { field: 'experience', title: '积分', width: 80, sort: true, totalRow: '{{ d.TOTAL_NUMS }} 分', templet: '<div>{{ d.loginTimes }} 分</div>' }
                , { field: 'loginTimes', title: '登入次数', width: 100, sort: true, totalRow: true }
                , { field: 'createDate', title: '加入时间', width: 120 }
                , { field: 'lastloginDate', title: '最后登录时间', width: 120 }
                , { field: 'isEnable', title: '状态', width: 120 }
                , { /*field: 'id',*/ fixed: 'right', title: '操作', toolbar: '#barOperation', width: 150 }
            ]]

            , initSort1: {
                field: 'experience' //排序字段，对应 cols 设定的各字段名
                , type: 'desc' //排序方式  asc: 升序、desc: 降序、null: 默认排序
            }

            , headers: { headers_token: 'sasasas' }
            , where: {
                test: '初始 test 参数'
                , token: '初始 token'
                , key: 'experience'
                , order: 'asc'
            }

            , done: function () {
                //下拉菜单
                dropdown.render({
                    elem: '#dropdown' //可绑定在任意元素中，此处以上述按钮为例
                    , data: [{
                        id: 0,
                        title: '刷新'
                    }]
                    //菜单被点击的事件
                    , click: function (obj) {
                        table.reload('test');
                    }
                });
            }

            , error: function (res, msg) {
                console.log(res, msg)
            }

            /*
            ,response: {
              statusName: 'status'
              ,statusCode: 200
            }
            ,parseData: function(res){
              return {
                "status": res.status
                ,"msg": res.message
                ,"count": res.total
                ,"data": res.data.list
              };
            }
            */
        });

        //工具栏事件
        table.on('toolbar(test)', function (obj) {
            console.log(obj);
            var checkStatus = table.checkStatus(obj.config.id);
            switch (obj.event) {
                case 'add':
                    layer.msg('添加');
                    layer.open({
                        type: 2,
                        title: '用户信息编辑',
                        area: ['800px', '550px'],
                        content: 'User/Edit',
                    })
                    break;
                case 'update':
                    layer.msg('编辑');
                    break;
                case 'delete':
                    layer.msg('删除');
                    break;
                case 'getCheckData':
                    var data = checkStatus.data;
                    layer.alert(JSON.stringify(data));
                    break;
                case 'getCheckLength':
                    var data = checkStatus.data;
                    layer.msg('选中了：' + data.length + ' 个');
                    break;
                case 'getData':
                    var getData = table.getData(obj.config.id);
                    console.log(getData);
                    layer.alert(JSON.stringify(getData));
                    break;
                case 'isAll':
                    layer.msg(checkStatus.isAll ? '全选' : '未全选')
                    break;
                case 'LAYTABLE_TIPS':
                    layer.alert('Table for layui-v' + layui.v);
                    break;
                case 'reload':
                    //深度重载
                    var instReload = table.reload('test', {

                        where: {
                            abc: 123
                            , test: '新的 test1'
                        }
                        , page: { curr: 5, limit: 20 }
                        , cols: ins1.config.cols
                        //,height: 300
                        //,url: 'x'
                    }, true);
                    break;
                case 'reload2':
                    //浅重载
                    table.reload('test', {
                        where: {
                            efg: 'sasasas'
                            //,test: '新的 test2'
                            //,token: '新的 token2'
                        }
                        , cols: [[
                            { type: 'checkbox', fixed: 'left' }
                            , { field: 'id', title: 'ID', width: 80, fixed: 'left', unresize: true, sort: true, totalRowText: '合计：' }
                            , { field: 'sex', title: '性别', width: 80, edit: 'text', sort: true }
                            , { field: 'experience', title: '积分', width: 80, sort: true, totalRow: true, templet: '<div>{{ d.experience }} 分</div>' }
                            , { field: 'logins', title: '登入次数', width: 100, sort: true, totalRow: true }
                            , { field: 'joinTime', title: '加入时间', width: 120 }
                        ]]
                        //,height: 500
                    });
                    break;
                case 'setRole':
                    var data = checkStatus.data;
                    if (data.length == 0) {
                        layer.msg("请选择用户");
                        return false;
                    }
                    if (data.length > 1)
                    {
                        layer.msg("请可以选择一个用户");
                        return false;
                    }
                    alert(data.id);
                    layer.open({
                        type: 2,
                        title: '用户角色分配',
                        area: ['800px', '550px'],
                        content: 'User/UserAuthorization?id=' + data.id,

                    })
                    break;

            };
        });

        table.on('tool(test)', function (obj) {
            var data = obj.data;
            console.log(data);
            if (obj.event === 'del') {
                layer.confirm('真的删除行么', function (index) {
                    //向服务端发送删除指令
                    $.ajax({
                        type: "post",
                        dataType: "json",
                        data: data.field,
                        url: '@Url.Action("Delete", "User")?id=' + data.id,
                        success: function (message) {
                            if (message == "") {
                                obj.del();
                                layer.close(index);
                                layer.msg('删除成功');
                            }
                            else {
                                layer.msg(message);
                                return false;
                            }
                        }, error: function (e) {
                            layer.msg("请求异常，请重试", { shift: 6 })
                        }
                    })

                });
            } else if (obj.event === 'edit') {
                //layer.prompt({
                //    formType: 2
                //    , value: data.email
                //}, function (value, index) {
                //    obj.update({
                //        email: value
                //    });
                //    layer.close(index);
                //});
                layer.open({
                    type: 2,
                    title: '用户信息编辑',
                    area: ['800px', '550px'],
                    content: 'User/Edit?id=' + data.id,

                })
            } else if (obj.event === 'setRole') {
                layer.open({
                    type: 2,
                    title: '用户角色分配',
                    area: ['800px', '550px'],
                    content: 'User/UserAuthorization?id=' + data.id,

                })
            }

        });
    })
    //layui.use('laydate', function () {
    //    var laydate = layui.laydate;

    //    //执行一个laydate实例
    //    laydate.render({
    //        elem: '#start' //指定元素
    //    });

    //    //执行一个laydate实例
    //    laydate.render({
    //        elem: '#end' //指定元素
    //    });
    //});

    /*用户-停用*/
    //function member_stop(obj, id) {
    //    layer.confirm('确认要停用吗？', function (index) {

    //        if ($(obj).attr('title') == '启用') {

    //            //发异步把用户状态进行更改
    //            $(obj).attr('title', '停用')
    //            $(obj).find('i').html('&#xe62f;');

    //            $(obj).parents("tr").find(".td-status").find('span').addClass('layui-btn-disabled').html('已停用');
    //            layer.msg('已停用!', { icon: 5, time: 1000 });

    //        } else {
    //            $(obj).attr('title', '启用')
    //            $(obj).find('i').html('&#xe601;');

    //            $(obj).parents("tr").find(".td-status").find('span').removeClass('layui-btn-disabled').html('已启用');
    //            layer.msg('已启用!', { icon: 5, time: 1000 });
    //        }

    //    });
    //}

    function reload() {
        var index = layer.load(1);
        layer.close(index);
        table.reload('test');
    }
</script>
